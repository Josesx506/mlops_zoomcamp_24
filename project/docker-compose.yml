volumes: 
  grafana_data: {}

networks:
  frontend-server:
  backend-server:

x-environment: &default-environment
  MLFLOW_TRACKING_URI: "http://mlflow:5150"
  APP_SERVER_HOST: "http://localhost:8534"
  DB_HOST: "db"
  DB_PORT: "5432"
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
  AWS_DEFAULT_REGION: ${AWS_Zone}
  S3_URI: ${S3_URI}

services:
  mlflow:
    build:
      context: .
      dockerfile: ./docker-files/Dockerfile.mlflow
    ports:
      - "5150:5150"
    networks:
      - backend-server
    environment:
        <<: *default-environment
    command: mlflow server -h 0.0.0.0 -p 5150 --backend-store-uri=sqlite:///mlflow.db --default-artifact-root=${S3_URI}
    restart: always
  
  mlserver:
    build:
      context: .
      dockerfile: ./docker-files/Dockerfile.mlserver
    ports:
      - "8534:8534"  # Expose the Gunicorn server port
    networks:
      - frontend-server
      - backend-server
    environment:
      <<: *default-environment
    depends_on:
      - mlflow
  
  webpack:
    build:
      context: .
      dockerfile: ./docker-files/Dockerfile.webpack
    ports:
      - "9300:9300"  # Expose the frontend leaflet server
    networks:
      - backend-server
    environment:
      <<: *default-environment
    depends_on:
      - mlserver
    
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: zmcp24
    ports:
      - "5436:5432"
    networks:
      - backend-server

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - backend-server
      - frontend-server  

  grafana:
    image: grafana/grafana
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./backend/config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./backend/config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./backend/dashboards:/opt/grafana/dashboards
    networks:
      - backend-server
      - frontend-server
    restart: always